//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""5dbe1f19-2459-47d0-980c-1c2df1167aea"",
            ""actions"": [
                {
                    ""name"": ""StepRight"",
                    ""type"": ""Button"",
                    ""id"": ""93b17bc6-44e7-4496-bb3f-134ce4f0ea71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StepLeft"",
                    ""type"": ""Button"",
                    ""id"": ""8843b4b5-0325-415c-9d3a-098ecc8017c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StepBack"",
                    ""type"": ""Button"",
                    ""id"": ""a309e55b-49c6-441b-92bb-b8a1b12a9c50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadStart"",
                    ""type"": ""Button"",
                    ""id"": ""8b1bd1c0-db01-4a53-8a17-f224ec6c53c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""14366b95-1693-4c14-9d70-5a6625fb6670"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadUp"",
                    ""type"": ""Button"",
                    ""id"": ""303b2c7b-600f-45ac-9541-0a18a2319c18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadLeft"",
                    ""type"": ""Button"",
                    ""id"": ""289d8d9f-d70f-44cc-9987-db6daf5f4e4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadRight"",
                    ""type"": ""Button"",
                    ""id"": ""76c6e304-ecd4-4094-973e-0ac89c3eac88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadDown"",
                    ""type"": ""Button"",
                    ""id"": ""1efe77e6-030c-48e7-a4c2-be6f7d6b8446"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7f8082ef-ac5a-4d93-85fb-3cc71a74591e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae88d73e-706f-4755-bf17-fe426a5fb56c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68f6988d-d006-414b-b197-19ee408aeb36"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8e90e31-f07d-4521-8bdc-ee1b5070a4e3"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dac54e9-5bda-41bd-96b1-78fb1883051a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53d3a918-e824-4b37-9f96-af49be0d16e6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StepBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""907b135e-b826-4b5b-b4da-41b47f889859"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6df2c34d-e19f-4b71-b9d6-ff3c2dc743a3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2052047-1ee7-4d7f-8603-143bb585e626"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""301f350b-d53b-4690-a136-146ac8a5eceb"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55757de8-acce-49b6-89d7-05082fb899c2"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16adc162-ba79-4d2e-9d03-31940de813af"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReloadDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_StepRight = m_Player.FindAction("StepRight", throwIfNotFound: true);
        m_Player_StepLeft = m_Player.FindAction("StepLeft", throwIfNotFound: true);
        m_Player_StepBack = m_Player.FindAction("StepBack", throwIfNotFound: true);
        m_Player_ReloadStart = m_Player.FindAction("ReloadStart", throwIfNotFound: true);
        m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
        m_Player_ReloadUp = m_Player.FindAction("ReloadUp", throwIfNotFound: true);
        m_Player_ReloadLeft = m_Player.FindAction("ReloadLeft", throwIfNotFound: true);
        m_Player_ReloadRight = m_Player.FindAction("ReloadRight", throwIfNotFound: true);
        m_Player_ReloadDown = m_Player.FindAction("ReloadDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_StepRight;
    private readonly InputAction m_Player_StepLeft;
    private readonly InputAction m_Player_StepBack;
    private readonly InputAction m_Player_ReloadStart;
    private readonly InputAction m_Player_Fire;
    private readonly InputAction m_Player_ReloadUp;
    private readonly InputAction m_Player_ReloadLeft;
    private readonly InputAction m_Player_ReloadRight;
    private readonly InputAction m_Player_ReloadDown;
    public struct PlayerActions
    {
        private @Inputs m_Wrapper;
        public PlayerActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @StepRight => m_Wrapper.m_Player_StepRight;
        public InputAction @StepLeft => m_Wrapper.m_Player_StepLeft;
        public InputAction @StepBack => m_Wrapper.m_Player_StepBack;
        public InputAction @ReloadStart => m_Wrapper.m_Player_ReloadStart;
        public InputAction @Fire => m_Wrapper.m_Player_Fire;
        public InputAction @ReloadUp => m_Wrapper.m_Player_ReloadUp;
        public InputAction @ReloadLeft => m_Wrapper.m_Player_ReloadLeft;
        public InputAction @ReloadRight => m_Wrapper.m_Player_ReloadRight;
        public InputAction @ReloadDown => m_Wrapper.m_Player_ReloadDown;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @StepRight.started += instance.OnStepRight;
            @StepRight.performed += instance.OnStepRight;
            @StepRight.canceled += instance.OnStepRight;
            @StepLeft.started += instance.OnStepLeft;
            @StepLeft.performed += instance.OnStepLeft;
            @StepLeft.canceled += instance.OnStepLeft;
            @StepBack.started += instance.OnStepBack;
            @StepBack.performed += instance.OnStepBack;
            @StepBack.canceled += instance.OnStepBack;
            @ReloadStart.started += instance.OnReloadStart;
            @ReloadStart.performed += instance.OnReloadStart;
            @ReloadStart.canceled += instance.OnReloadStart;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @ReloadUp.started += instance.OnReloadUp;
            @ReloadUp.performed += instance.OnReloadUp;
            @ReloadUp.canceled += instance.OnReloadUp;
            @ReloadLeft.started += instance.OnReloadLeft;
            @ReloadLeft.performed += instance.OnReloadLeft;
            @ReloadLeft.canceled += instance.OnReloadLeft;
            @ReloadRight.started += instance.OnReloadRight;
            @ReloadRight.performed += instance.OnReloadRight;
            @ReloadRight.canceled += instance.OnReloadRight;
            @ReloadDown.started += instance.OnReloadDown;
            @ReloadDown.performed += instance.OnReloadDown;
            @ReloadDown.canceled += instance.OnReloadDown;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @StepRight.started -= instance.OnStepRight;
            @StepRight.performed -= instance.OnStepRight;
            @StepRight.canceled -= instance.OnStepRight;
            @StepLeft.started -= instance.OnStepLeft;
            @StepLeft.performed -= instance.OnStepLeft;
            @StepLeft.canceled -= instance.OnStepLeft;
            @StepBack.started -= instance.OnStepBack;
            @StepBack.performed -= instance.OnStepBack;
            @StepBack.canceled -= instance.OnStepBack;
            @ReloadStart.started -= instance.OnReloadStart;
            @ReloadStart.performed -= instance.OnReloadStart;
            @ReloadStart.canceled -= instance.OnReloadStart;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @ReloadUp.started -= instance.OnReloadUp;
            @ReloadUp.performed -= instance.OnReloadUp;
            @ReloadUp.canceled -= instance.OnReloadUp;
            @ReloadLeft.started -= instance.OnReloadLeft;
            @ReloadLeft.performed -= instance.OnReloadLeft;
            @ReloadLeft.canceled -= instance.OnReloadLeft;
            @ReloadRight.started -= instance.OnReloadRight;
            @ReloadRight.performed -= instance.OnReloadRight;
            @ReloadRight.canceled -= instance.OnReloadRight;
            @ReloadDown.started -= instance.OnReloadDown;
            @ReloadDown.performed -= instance.OnReloadDown;
            @ReloadDown.canceled -= instance.OnReloadDown;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnStepRight(InputAction.CallbackContext context);
        void OnStepLeft(InputAction.CallbackContext context);
        void OnStepBack(InputAction.CallbackContext context);
        void OnReloadStart(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnReloadUp(InputAction.CallbackContext context);
        void OnReloadLeft(InputAction.CallbackContext context);
        void OnReloadRight(InputAction.CallbackContext context);
        void OnReloadDown(InputAction.CallbackContext context);
    }
}
